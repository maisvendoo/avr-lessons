;----------------------------------------------------------
;	Set bit with stack
;----------------------------------------------------------
		.MACRO SETBM
		.if @0 < 0x20
		sbi @0, @1
		.else
			.if @0 < 0x40
			push r17
			in r17, @0
			ori r17, 1 << @1
			out @0, r17
			pop r17
			.else
			push r17
			lds r17,@0
			ori r17, 1 << @1
			sts @0, R17
			pop r17
			.endif
		.endif
		.ENDM

;----------------------------------------------------------
;	Clear bit with stack
;----------------------------------------------------------
		.MACRO CLRBM
		.if @0 < 0x20
		cbi @0, @1
		.else
			.if @0 < 0x40
			push r17
			in r17, @0
			andi r17, ~(1 << @1)
			out @0, r17
			pop r17
			.else
			push r17
			lds r17, @0
			andi r17, ~(1 << @1)
			sts @0, r17
			pop r17
			.endif
		.endif
		.ENDM

;----------------------------------------------------------
;	Clear bit with stack
;----------------------------------------------------------
		.MACRO INVBM
		.if @0 < 0x40
		push r16
		push r17
		in r16, @0
		ldi r17, 1 << @1
		eor r17, r16
		out @0, r17
		pop r17
		pop r16
		.else
		push r16
		push r17
		lds r16, @0
		ldi r17, 1 << @1
		eor r17, r16
		sts @0, r17
		pop r17
		pop r16
		.endif
		.ENDM

;----------------------------------------------------------
;	Out to any address
;----------------------------------------------------------
		.MACRO	OUTI
		ldi r16, @1
		.if @0 < 0x40
		out @0, r16
		.else
		sts @0, r16
		.endif
		.ENDM

;----------------------------------------------------------
;	
;----------------------------------------------------------
		.MACRO 	OUTU
		.if @0 < 0x40
		out @0, @1
		.else
		sts @0, @1
		.endif
		.ENDM

;----------------------------------------------------------
;
;----------------------------------------------------------
		.MACRO INCQ
		
		lds r16, @0
		lds r17, @0 + 1
		lds r18, @0 + 2
		lds r19, @0 + 3

		subi r16, (-1)
		sbci r17, (-1)
		sbci r18, (-1)
		sbci r19, (-1)

		sts @0, r16
		sts @0 + 1, r17
		sts @0 + 2, r18
		sts @0 + 3, r19		

		.ENDM

;----------------------------------------------------------
;
;----------------------------------------------------------
		.MACRO PUSHF
		push r16
		in r16, sreg
		push r16
		.endm

;----------------------------------------------------------
;
;----------------------------------------------------------
		.MACRO POPF
		pop r16
		out sreg, r16
		pop r16
		.ENDM

